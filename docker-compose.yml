version: "3"

services:
 
  report-processing-db-host:
    image: mongo:4.0-xenial
    ports:
      - "27017"
    volumes:
      - report-processing-db-storage:/data/db
    networks:
      - report-processing-service-network
    environment:
      MONGO_INITDB_DATABASE: report-processing-service-db
      MONGO_INITDB_ROOT_USERNAME: report-processing-service-db-user
      MONGO_INITDB_ROOT_PASSWORD: ${REPORT_PROCESSING_SERVICE_DB_PASS}

  report-processing-service-host:
    image: report-processing-service:${REPORT_PROCESSING_SERVICE_VERSION}
    restart: on-failure
    links:
      - report-processing-db-host
      - report-queue-host
    ports:
      - "3005:3000"
    networks:
      - report-processing-service-network
    environment:
      DB_HOST: report-processing-db-host
      DB_NAME: report-processing-service-db
      DB_USER: report-processing-service-db-user
      DB_PASSWORD: ${REPORT_PROCESSING_SERVICE_DB_PASS}
      QUEUE_HOST: report-queue-host
      # QUEUE_USER: report-service-queue-user
      # QUEUE_PASSWORD: ${REPORT_SERVICE_QUEUE_PASS}

  inspector-db-host:
    image: mongo:3.4
    ports:
      - "27017"
    volumes:
      - inspector-db-storage:/data/db
    networks:
      - inspector-service-network
    environment:
      MONGO_INITDB_DATABASE: inspector-service-db
      MONGO_INITDB_ROOT_USERNAME: inspector-service-db-user
      MONGO_INITDB_ROOT_PASSWORD: ${INSPECTOR_SERVICE_DB_PASS}

  inspector-service-host:
    image: inspector-service:${INSPECTOR_SERVICE_VERSION}
    restart: on-failure
    links:
      - inspector-db-host
    ports:
      - "3003:3000"
    networks:
      - inspector-service-network
    environment:
      DB_HOST: inspector-db-host
      DB_NAME: inspector-service-db
      DB_USER: inspector-service-db-user
      DB_PASSWORD: ${INSPECTOR_SERVICE_DB_PASS}

  photo-db-host:
    image: mongo:3.4
    ports:
      - "27017"
    volumes:
      - photo-db-storage:/data/db
    networks:
      - photo-service-network
    environment:
      MONGO_INITDB_DATABASE: photo-service-db
      MONGO_INITDB_ROOT_USERNAME: photo-service-db-user
      MONGO_INITDB_ROOT_PASSWORD: ${PHOTO_SERVICE_DB_PASS}

  photo-queue-host:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      # RABBITMQ_DEFAULT_USER: photo-service-queue-user
      # RABBITMQ_DEFAULT_PASS: ${PHOTO_SERVICE_QUEUE_PASS}
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "15672"
      - "5672"
    networks:
      - photo-service-network
      - report-service-network

  photo-service-host:
    image: photo-service:${PHOTO_SERVICE_VERSION}
    restart: on-failure
    links:
      - photo-db-host
      - photo-queue-host
    ports:
      - "3002:3000"
    # volumes:
      # - photo-storage:/usr/app/storage
    networks:
      - photo-service-network
    environment:
      DB_HOST: photo-db-host
      DB_NAME: photo-service-db
      DB_USER: photo-service-db-user
      DB_PASSWORD: ${PHOTO_SERVICE_DB_PASS}
      QUEUE_HOST: photo-queue-host
      IMAGES_QUEUE_NAME: images-queue
      # QUEUE_USER: photo-service-queue-user
      # QUEUE_PASSWORD: ${PHOTO_SERVICE_QUEUE_PASS}
      FILE_PATH: storage

  report-db-host:
    image: mongo:3.4
    ports:
      - "27017"
    volumes:
      - report-db-storage:/data/db
    networks:
      - report-service-network
    environment:
      MONGO_INITDB_DATABASE: report-service-db
      MONGO_INITDB_ROOT_USERNAME: report-service-db-user
      MONGO_INITDB_ROOT_PASSWORD: ${REPORT_SERVICE_DB_PASS}

  report-queue-host:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      # RABBITMQ_DEFAULT_USER: report-service-queue-user
      # RABBITMQ_DEFAULT_PASS: ${PHOTO_SERVICE_QUEUE_PASS}
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "15672"
      - "5672"
    networks:
      - report-service-network
      - report-processing-service-network

  report-service-host:
    image: report-service:${REPORT_SERVICE_VERSION}
    restart: on-failure
    links:
      - report-db-host
      - report-queue-host
      - photo-queue-host
    ports:
      - "3001:3000"
    networks:
      - report-service-network
    environment:
      DB_HOST: report-db-host
      DB_NAME: report-service-db
      DB_USER: report-service-db-user
      DB_PASSWORD: ${REPORT_SERVICE_DB_PASS}
      QUEUE_HOST: photo-queue-host
      IMAGES_QUEUE_NAME: images-queue
      # QUEUE_USER: report-service-queue-user
      # QUEUE_PASSWORD: ${PHOTO_SERVICE_QUEUE_PASS}
      REPORT_QUEUE_HOST: report-queue-host

  notification-service-host:
    image: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    restart: on-failure
    links:
      - db-host
    ports:
      - "3004:3000"
    environment:
      DB_HOST: db-host
      DB_NAME: notification-service-db

volumes:
  # photo-storage:
  inspector-db-storage:
  photo-db-storage:
  report-db-storage:
  report-processing-db-storage:

networks:
  inspector-service-network:
    driver: bridge
  photo-service-network:
    driver: bridge
  report-service-network:
    driver: bridge
  report-processing-service-network:
    driver: bridge