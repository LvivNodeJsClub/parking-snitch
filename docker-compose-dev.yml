version: "3"

services:
 
  db-host:
    image: mongo:latest
    ports:
      - "27017"

  queue-host:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "15672"
      - "5672"

  report-processing-service-host:
    image: report-processing-service
    build:
      context: ./report-processing-service
      dockerfile: Dockerfile
    restart: on-failure
    links:
      - queue-host
    ports:
      - "3005:3000"
    environment:
      REPORT_QUEUE_HOST: queue-host
      REPORT_BASE_PATH: http://report-service-host:3000
      INSPECTOR_BASE_PATH: http://inspector-service-host:3000
      NOTIFICATION_BASE_PATH: http://notification-service-host:3000

  notification-service-host:
    image: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    restart: on-failure
    links:
      - db-host
    ports:
      - "3004:3000"
    environment:
      DB_HOST: db-host
      DB_NAME: notification-service-db

  inspector-service-host:
    image: inspector-service
    build:
      context: ./inspector-service
      dockerfile: Dockerfile
    restart: on-failure
    links:
      - db-host
    ports:
      - "3003:3000"
    environment:
      DB_HOST: db-host
      DB_NAME: inspector-service-db

  photo-service-host:
    image: photo-service
    build:
      context: ./photo-service
      dockerfile: Dockerfile
    restart: on-failure
    links:
      - db-host
      - queue-host
    ports:
      - "3002:3000"
#    volumes:
#      - photo-storage:/usr/app/storage
    environment:
      DB_HOST: db-host
      DB_NAME: photo-service-db
      QUEUE_HOST: queue-host
      IMAGES_QUEUE_NAME: images-queue
      FILE_PATH: storage

  report-service-host:
    image: report-service
    build:
      context: ./report-service
      dockerfile: Dockerfile
    restart: on-failure
    links:
      - db-host
      - queue-host
    ports:
      - "3001:3000"
    environment:
      DB_HOST: db-host
      DB_NAME: report-service-db
      QUEUE_HOST: queue-host
      IMAGES_QUEUE_NAME: images-queue
      REPORT_QUEUE_HOST: queue-host

# volumes:
#   photo-storage:
